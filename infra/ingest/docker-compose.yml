services:
  redpanda:
    image: redpandadata/redpanda:v25.2.9
    container_name: redpanda
    restart: unless-stopped
    ports:
      - "19092:19092"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    environment:
      REDPANDA_LOG_LEVEL: ${REDPANDA_LOG_LEVEL:-info}
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082
      - --advertise-pandaproxy-addr internal://redpanda:8082
      - --schema-registry-addr internal://0.0.0.0:8081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --overprovisioned
      - --smp 2
      - --memory 2G
      - --reserve-memory 0M
      - --default-log-level=info
      - --set redpanda.enable_sasl=true
      - --set redpanda.superusers=['admin']
    networks:
      - databuddy
    healthcheck:
      test: [ "CMD", "rpk", "cluster", "health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redpanda-init:
    image: redpandadata/redpanda:v25.2.9
    container_name: redpanda-init
    restart: "no"
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      VECTOR_KAFKA_USER: ${VECTOR_KAFKA_USER:-vector-agent}
      VECTOR_KAFKA_PASSWORD: ${VECTOR_KAFKA_PASSWORD:-super_secret_password}
    entrypoint: >
      bash -c "
        echo 'Waiting for Redpanda to be ready...' &&
        sleep 5 &&
        echo 'Enabling SASL mechanisms...' &&
        rpk cluster config set sasl_mechanisms '[\"SCRAM\"]' -X brokers=redpanda:9092 -X admin.hosts=redpanda:9644 || true &&
        echo 'Creating Kafka user: $VECTOR_KAFKA_USER' &&
        rpk security user create $VECTOR_KAFKA_USER -p '$VECTOR_KAFKA_PASSWORD' -X brokers=redpanda:9092 -X admin.hosts=redpanda:9644 || true &&
        echo 'Setting up ACLs for all topics and groups...' &&
        rpk security acl create --allow-principal User:$VECTOR_KAFKA_USER --operation write,read,describe,create --topic '*' -X brokers=redpanda:9092 || true &&
        rpk security acl create --allow-principal User:$VECTOR_KAFKA_USER --operation read,describe --group '*' -X brokers=redpanda:9092 || true &&
        echo 'ACL setup complete'
      "
    networks:
      - databuddy

  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: redpanda:9092
      REDPANDA_ADMIN_API_ENABLED: "true"
      REDPANDA_ADMIN_API_URLS: "http://redpanda:9644"
    networks:
      - databuddy
    depends_on:
      redpanda:
        condition: service_healthy

  vector:
    image: timberio/vector:0.50.0-alpine
    container_name: vector
    restart: unless-stopped
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-defaultpass}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-http://clickhouse:8123}
      CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE:-analytics}
      VECTOR_LOG: ${VECTOR_LOG:-info}
      VECTOR_KAFKA_USER: ${VECTOR_KAFKA_USER:-vector-agent}
      VECTOR_KAFKA_PASSWORD: ${VECTOR_KAFKA_PASSWORD:-super_secret_password}
      REDPANDA_BROKER: ${REDPANDA_BROKER:-redpanda:9092}
    networks:
      - databuddy
    depends_on:
      redpanda:
        condition: service_healthy
      redpanda-init:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "vector", "validate", "/etc/vector/vector.yaml" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  redpanda_data:


networks:
  databuddy:
    name: databuddy
    driver: bridge
